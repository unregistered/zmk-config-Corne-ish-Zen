/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LEVMAIN 0
#define LEVSHIFT 1
#define LEVSYM 2
#define LEVNUM 3

/
{
        /*combos {
                compatible = "zmk,combos";
                combo_symshift {
                        timeout - ms = <50>;
                        key - positions = <37 41>;
                        bindings = <&mo 3>;
                };
        };*/
        behaviors {
            a_DQT: a_DQT {
                compatible = "zmk,behavior-mod-morph";
                label = "a_DQT";
                #binding-cells = <0>;
                bindings = <&kp DQT>, <&kp EXCL>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
        };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "MAIN";
                        bindings = <
   &mt LCTRL TAB    &kp Q &kp H   &kp O     &kp U &kp X         &kp G   &kp C  &kp M  &kp R   &kp V    &kp BSPC
   &kp ESC          &kp Y &kp I   &kp E     &kp A &kp DOT       &kp D   &kp S  &kp T  &kp N   &kp B    &kp SQT
   &kp LSHIFT       &kp J &a_DQT &kp COMMA &kp K &kp SQT       &kp W   &kp F  &kp L  &kp P   &kp Z    &kp LALT

                   &lt LEVNUM BSPC &mo LEVSHIFT &mt LCMD TAB                &kp RET &lt LEVSYM SPACE &mo LEVNUM
                        >;
                };

                adjust_layer {
                        label = "SHIFT";
                        bindings = <
   &trans &kp LS(Q) &kp LS(H)   &kp LS(O)     &kp LS(U) &kp LS(X)         &kp LS(G)   &kp LS(C)  &kp LS(M)  &kp LS(R)   &kp LS(V)    &trans
   &trans &kp LS(Y) &kp LS(I)   &kp LS(E)     &kp LS(A) &kp GRAVE         &kp LS(D)   &kp LS(S)  &kp LS(T)  &kp LS(N)   &kp LS(B)    &trans
   &trans &kp LS(J) &kp EXCL    &kp QMARK     &kp LS(K) &kp SQT           &kp LS(W)   &kp LS(F)  &kp LS(L)  &kp LS(P)   &kp LS(Z)    &trans

                   &trans &trans &trans                  &trans &trans &trans
                        >;
                };

                punct_layer {
                        label = "SYM";
                        bindings = <
   &trans &none     &kp LT    &kp EQUAL &kp GT    &kp HASH      &kp PLUS  &kp LBKT &kp UNDER &kp RBKT &none       &trans
   &trans &kp BSLH  &kp LPAR  &kp MINUS &kp RPAR  &kp DLLR      &kp EXCL  &kp LBRC &kp  SEMI &kp RBRC &kp PERCENT &trans
   &trans &none     &kp STAR  &kp COLON &kp SLASH &kp AT        &kp CARET &kp PIPE &kp TILDE &kp AMPS &none       &trans

                   &trans &trans &trans                 &trans &trans &trans
                        >;
                };

                num_layer {
                        label = "NUM";
                        bindings = <
   &trans &none &none    &kp UP   &none     &none          &reset &kp N7 &kp N8 &kp N9 &kp N0 &trans
   &trans &none &kp LEFT &kp DOWN &kp RIGHT &none          &none  &kp N4 &kp N5 &kp N6 &none  &trans
   &trans &none &none    &none    &none     &none          &none  &kp N1 &kp N2 &kp N3 &kp N0 &trans

                   &trans &trans &trans                 &trans &trans &trans
                        >;
                };

        };
};
